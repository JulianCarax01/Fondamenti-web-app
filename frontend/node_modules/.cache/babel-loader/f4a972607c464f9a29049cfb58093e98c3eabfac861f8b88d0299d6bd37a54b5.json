{"ast":null,"code":"var _jsxFileName = \"/home/mamba/WebstormProjects/app/frontend/src/components/Message.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport '../style/style_message.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Message(_ref) {\n  _s();\n  let {\n    message,\n    loggedUser\n  } = _ref;\n  const [color, setColor] = useState(\"\");\n  const [messageClass, setMessageClass] = useState(\"\");\n  useEffect(() => {\n    loggedUser._id === message.sender[0] ? setColor(\"white\") : setColor(\"f2f2f2\");\n\n    // Imposta la classe del messaggio in base al colore\n    setColorClass(color === \"white\" ? \"right\" : \"left\");\n  }, [color]);\n  const setColorClass = color => {\n    setMessageClass(color);\n  };\n  return (\n    /*#__PURE__*/\n    //definiamo la struttura del messaggio\n    _jsxDEV(\"p\", {\n      className: `${messageClass}`,\n      style: {\n        color: color\n      },\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(Message, \"FhrMF4hA+BHjNjmbvZE8YpbpyMg=\");\n_c = Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Message","_ref","_s","message","loggedUser","color","setColor","messageClass","setMessageClass","_id","sender","setColorClass","className","style","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mamba/WebstormProjects/app/frontend/src/components/Message.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport '../style/style_message.css';\n\nexport default function Message({ message, loggedUser }) {\n    const [color, setColor] = useState(\"\");\n    const [messageClass, setMessageClass] = useState(\"\");\n\n    useEffect(() => {\n        loggedUser._id === message.sender[0] ? setColor(\"white\") : setColor(\"f2f2f2\");\n\n        // Imposta la classe del messaggio in base al colore\n        setColorClass(color === \"white\" ? \"right\" : \"left\");\n    }, [color]);\n\n    const setColorClass = (color) => {\n        setMessageClass(color);\n    };\n\n    return (\n        //definiamo la struttura del messaggio\n        <p className={`${messageClass}`} style={{ color: color }}>\n            {message.text}\n        </p>\n    );\n}\n\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,OAAOA,CAAAC,IAAA,EAA0B;EAAAC,EAAA;EAAA,IAAzB;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAAH,IAAA;EACnD,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZQ,UAAU,CAACK,GAAG,KAAKN,OAAO,CAACO,MAAM,CAAC,CAAC,CAAC,GAAGJ,QAAQ,CAAC,OAAO,CAAC,GAAGA,QAAQ,CAAC,QAAQ,CAAC;;IAE7E;IACAK,aAAa,CAACN,KAAK,KAAK,OAAO,GAAG,OAAO,GAAG,MAAM,CAAC;EACvD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMM,aAAa,GAAIN,KAAK,IAAK;IAC7BG,eAAe,CAACH,KAAK,CAAC;EAC1B,CAAC;EAED;IAAA;IACI;IACAN,OAAA;MAAGa,SAAS,EAAG,GAAEL,YAAa,EAAE;MAACM,KAAK,EAAE;QAAER,KAAK,EAAEA;MAAM,CAAE;MAAAS,QAAA,EACpDX,OAAO,CAACY;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;AAEZ;AAACjB,EAAA,CArBuBF,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}