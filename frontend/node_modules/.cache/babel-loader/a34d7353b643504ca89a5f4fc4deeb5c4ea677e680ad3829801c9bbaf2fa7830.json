{"ast":null,"code":"var _jsxFileName = \"/home/mamba/WebstormProjects/app/frontend/src/components/TextContainer.jsx\",\n  _s = $RefreshSig$();\nimport Message from \"./Message\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { socket } from \"../socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextContainer(_ref) {\n  _s();\n  let {\n    rightChat,\n    loggedUser\n  } = _ref;\n  const [chats, setChats] = useState(rightChat);\n  const ref = useRef(null);\n  const scroll = () => {\n    var _ref$current;\n    const lastChild = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.lastElementChild;\n    lastChild === null || lastChild === void 0 ? void 0 : lastChild.scrollIntoView();\n  };\n  useEffect(() => {\n    setChats(rightChat);\n    socket.on(\"message\", () => {\n      scroll();\n    });\n    scroll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    children: chats.messages.map(message => {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        loggedUser: loggedUser\n      }, message._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this);\n}\n\n/*socket.on(\"message\", (message) => {\n            let newMex = <Message key={message._id}\n                                  message={message}\n                                  loggedUser={loggedUser}></Message>\n            let p = document.createElement(\"p\")\n            let color;\n            loggedUser._id === message.sender[0] ? color = `green` : color = `red`\n            p.innerHTML = message.text;\n            p.style.color = color;\n            ref.current.append(p)\n            console.log(newMex)\n            ref.current.append(newMex.props.message)\n            scroll()\n        })*/\n_s(TextContainer, \"OkwDvwO+fbV2GGTvqH7/xa933jo=\");\n_c = TextContainer;\nvar _c;\n$RefreshReg$(_c, \"TextContainer\");","map":{"version":3,"names":["Message","useEffect","useRef","useState","socket","jsxDEV","_jsxDEV","TextContainer","_ref","_s","rightChat","loggedUser","chats","setChats","ref","scroll","_ref$current","lastChild","current","lastElementChild","scrollIntoView","on","children","messages","map","message","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mamba/WebstormProjects/app/frontend/src/components/TextContainer.jsx"],"sourcesContent":["import Message from \"./Message\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {socket} from \"../socket\";\n\nexport default function TextContainer({rightChat, loggedUser}) {\n    const[chats,setChats]=useState(rightChat)\n\n    const ref = useRef(null)\n    const scroll = () => {\n        const lastChild = ref.current?.lastElementChild;\n        lastChild?.scrollIntoView()\n    }\n\n    useEffect(() => {\n        setChats(rightChat)\n        socket.on(\"message\", () => {\n\n            scroll()\n        })\n        scroll()\n    },[]);\n\n    return (<div ref={ref}>\n            {chats.messages.map((message) => {\n                return <Message key={message._id}\n                                message={message}\n                                loggedUser={loggedUser}></Message>\n            })}</div>\n\n\n    )\n}\n\n/*socket.on(\"message\", (message) => {\n            let newMex = <Message key={message._id}\n                                  message={message}\n                                  loggedUser={loggedUser}></Message>\n            let p = document.createElement(\"p\")\n            let color;\n            loggedUser._id === message.sender[0] ? color = `green` : color = `red`\n            p.innerHTML = message.text;\n            p.style.color = color;\n            ref.current.append(p)\n            console.log(newMex)\n            ref.current.append(newMex.props.message)\n            scroll()\n        })*/"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,SAAQC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACjD,SAAQC,MAAM,QAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAA0B;EAAAC,EAAA;EAAA,IAAzB;IAACC,SAAS;IAAEC;EAAU,CAAC,GAAAH,IAAA;EACzD,MAAK,CAACI,KAAK,EAACC,QAAQ,CAAC,GAACV,QAAQ,CAACO,SAAS,CAAC;EAEzC,MAAMI,GAAG,GAAGZ,MAAM,CAAC,IAAI,CAAC;EACxB,MAAMa,MAAM,GAAGA,CAAA,KAAM;IAAA,IAAAC,YAAA;IACjB,MAAMC,SAAS,IAAAD,YAAA,GAAGF,GAAG,CAACI,OAAO,cAAAF,YAAA,uBAAXA,YAAA,CAAaG,gBAAgB;IAC/CF,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,cAAc,CAAC,CAAC;EAC/B,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACZY,QAAQ,CAACH,SAAS,CAAC;IACnBN,MAAM,CAACiB,EAAE,CAAC,SAAS,EAAE,MAAM;MAEvBN,MAAM,CAAC,CAAC;IACZ,CAAC,CAAC;IACFA,MAAM,CAAC,CAAC;EACZ,CAAC,EAAC,EAAE,CAAC;EAEL,oBAAQT,OAAA;IAAKQ,GAAG,EAAEA,GAAI;IAAAQ,QAAA,EACbV,KAAK,CAACW,QAAQ,CAACC,GAAG,CAAEC,OAAO,IAAK;MAC7B,oBAAOnB,OAAA,CAACN,OAAO;QACCyB,OAAO,EAAEA,OAAQ;QACjBd,UAAU,EAAEA;MAAW,GAFlBc,OAAO,CAACC,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEiB,CAAC;IACtD,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAIrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbArB,EAAA,CA7BwBF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}