{"ast":null,"code":"var _jsxFileName = \"/home/mamba/WebstormProjects/app/frontend/src/components/TextContainer.jsx\",\n  _s = $RefreshSig$();\nimport Message from \"./Message\";\nimport { useEffect, useRef } from \"react\";\nimport { socket } from \"../socket\";\nimport '../style/style_textcontainer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextContainer(_ref) {\n  _s();\n  let {\n    rightChat,\n    loggedUser\n  } = _ref;\n  const ref = useRef(null);\n  const scroll = () => {\n    var _ref$current;\n    const lastChild = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.lastElementChild;\n    lastChild === null || lastChild === void 0 ? void 0 : lastChild.scrollIntoView();\n  };\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      let newMex = /*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        loggedUser: loggedUser\n      }, message._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 26\n      }, this);\n      let p = document.createElement(\"p\");\n      let color;\n      loggedUser._id === message.sender[0] ? color = `green` : color = `white`;\n      p.innerHTML = message.text;\n      p.style.color = color;\n      p.style.background = \"#f96d00\";\n      p.style.marginLeft = \"auto\";\n      p.style.width = \"fit-content\";\n      ref.current.append(newMex);\n      scroll();\n    });\n    scroll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'chatdiv',\n    ref: ref,\n    children: rightChat.messages.map(message => {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        loggedUser: loggedUser\n      }, message._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n}\n_s(TextContainer, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = TextContainer;\nvar _c;\n$RefreshReg$(_c, \"TextContainer\");","map":{"version":3,"names":["Message","useEffect","useRef","socket","jsxDEV","_jsxDEV","TextContainer","_ref","_s","rightChat","loggedUser","ref","scroll","_ref$current","lastChild","current","lastElementChild","scrollIntoView","on","message","newMex","_id","fileName","_jsxFileName","lineNumber","columnNumber","p","document","createElement","color","sender","innerHTML","text","style","background","marginLeft","width","append","className","children","messages","map","_c","$RefreshReg$"],"sources":["/home/mamba/WebstormProjects/app/frontend/src/components/TextContainer.jsx"],"sourcesContent":["import Message from \"./Message\";\nimport {useEffect, useRef} from \"react\";\nimport {socket} from \"../socket\";\nimport '../style/style_textcontainer.css'\nexport default function TextContainer({rightChat, loggedUser}) {\n    const ref = useRef(null)\n\n    const scroll = () => {\n        const lastChild = ref.current?.lastElementChild;\n        lastChild?.scrollIntoView()\n    }\n\n    useEffect(() => {\n        socket.on(\"message\", (message) => {\n            let newMex = <Message key={message._id}\n                                  message={message}\n                                  loggedUser={loggedUser}></Message>\n            let p = document.createElement(\"p\")\n            let color;\n            loggedUser._id === message.sender[0] ? color = `green` : color = `white`\n            p.innerHTML = message.text;\n            p.style.color = color;\n            p.style.background = \"#f96d00\";\n            p.style.marginLeft = \"auto\";\n            p.style.width = \"fit-content\";\n            ref.current.append(newMex)\n            scroll()\n        })\n        scroll()\n    }, []);\n\n    return (<div className={'chatdiv'} ref={ref}>\n            {rightChat.messages.map((message) => {\n                return <Message key={message._id}\n                                message={message}\n                                loggedUser={loggedUser}></Message>\n            })}\n        </div>\n\n\n    )\n}\n\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,SAAQC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACvC,SAAQC,MAAM,QAAO,WAAW;AAChC,OAAO,kCAAkC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzC,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAA0B;EAAAC,EAAA;EAAA,IAAzB;IAACC,SAAS;IAAEC;EAAU,CAAC,GAAAH,IAAA;EACzD,MAAMI,GAAG,GAAGT,MAAM,CAAC,IAAI,CAAC;EAExB,MAAMU,MAAM,GAAGA,CAAA,KAAM;IAAA,IAAAC,YAAA;IACjB,MAAMC,SAAS,IAAAD,YAAA,GAAGF,GAAG,CAACI,OAAO,cAAAF,YAAA,uBAAXA,YAAA,CAAaG,gBAAgB;IAC/CF,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,cAAc,CAAC,CAAC;EAC/B,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZE,MAAM,CAACe,EAAE,CAAC,SAAS,EAAGC,OAAO,IAAK;MAC9B,IAAIC,MAAM,gBAAGf,OAAA,CAACL,OAAO;QACCmB,OAAO,EAAEA,OAAQ;QACjBT,UAAU,EAAEA;MAAW,GAFlBS,OAAO,CAACE,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEiB,CAAC;MACxD,IAAIC,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACnC,IAAIC,KAAK;MACTnB,UAAU,CAACW,GAAG,KAAKF,OAAO,CAACW,MAAM,CAAC,CAAC,CAAC,GAAGD,KAAK,GAAI,OAAM,GAAGA,KAAK,GAAI,OAAM;MACxEH,CAAC,CAACK,SAAS,GAAGZ,OAAO,CAACa,IAAI;MAC1BN,CAAC,CAACO,KAAK,CAACJ,KAAK,GAAGA,KAAK;MACrBH,CAAC,CAACO,KAAK,CAACC,UAAU,GAAG,SAAS;MAC9BR,CAAC,CAACO,KAAK,CAACE,UAAU,GAAG,MAAM;MAC3BT,CAAC,CAACO,KAAK,CAACG,KAAK,GAAG,aAAa;MAC7BzB,GAAG,CAACI,OAAO,CAACsB,MAAM,CAACjB,MAAM,CAAC;MAC1BR,MAAM,CAAC,CAAC;IACZ,CAAC,CAAC;IACFA,MAAM,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAQP,OAAA;IAAKiC,SAAS,EAAE,SAAU;IAAC3B,GAAG,EAAEA,GAAI;IAAA4B,QAAA,EACnC9B,SAAS,CAAC+B,QAAQ,CAACC,GAAG,CAAEtB,OAAO,IAAK;MACjC,oBAAOd,OAAA,CAACL,OAAO;QACCmB,OAAO,EAAEA,OAAQ;QACjBT,UAAU,EAAEA;MAAW,GAFlBS,OAAO,CAACE,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEiB,CAAC;IACtD,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAId;AAACjB,EAAA,CArCuBF,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}