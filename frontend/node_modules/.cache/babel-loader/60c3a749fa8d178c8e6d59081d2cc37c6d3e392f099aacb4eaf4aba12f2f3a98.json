{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ross2\\\\Desktop\\\\Fondamenti-web-app\\\\frontend\\\\src\\\\pages\\\\ChatsPageFriends.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ChatButton from \"../components/ChatButton\";\nimport Chat from \"../components/Chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatsPageFriends() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [chats, setChats] = useState([]);\n  const [showChatRoom, setShowChatRoom] = useState(false);\n  const [otherUser, setOtherUser] = useState(``);\n  const [rightChat, setRightChat] = useState({});\n  const loggedUser = JSON.parse(localStorage.getItem(\"user\"));\n  useEffect(() => {\n    // Ottenere i dati dell'utente loggato\n    axios.get(`http://localhost:3000/api/users/${loggedUser._id}`).then(res => {\n      if (res.status === 200) {\n        const user = res.data;\n        // Ottenere i dati degli amici associati all'utente\n        axios.get(`http://localhost:3000/api/users/friends/${loggedUser._id}`).then(res => {\n          if (res.status === 200) {\n            const friends = res.data;\n            // Aggiornare l'oggetto loggedUser includendo i dati degli amici\n            const updatedLoggedUser = {\n              ...user,\n              friends: friends\n            };\n            localStorage.setItem(\"user\", JSON.stringify(updatedLoggedUser));\n            setLoading(false);\n            setChats(res.data);\n          } else {\n            throw new Error(\"Errore di comunicazione col server nell'ottenimento degli amici\");\n          }\n        }).catch(e => {\n          setError(true);\n          setLoading(false);\n          console.log(e);\n        });\n      } else {\n        throw new Error(\"Errore di comunicazione col server nell'ottenimento dei dati utente\");\n      }\n    }).catch(e => {\n      setError(true);\n      setLoading(false);\n      console.log(e);\n    });\n  }, []);\n  console.log(loggedUser);\n  console.log(loggedUser.friends.length);\n\n  //filtro le chat, controllo se l'utente è presente nella lista di amici con some e prendo il suo id\n  const friendChats = chats.filter(chat => {\n    const friendID = chat.utente1 === loggedUser._id ? chat.utente2 : chat.utente1;\n    const isFriend = loggedUser.friends.some(friend => friend._id == friendID);\n    return isFriend;\n  });\n  console.log(friendChats.length);\n  console.log(friendChats);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!friendChats.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Non hai ancora chat con gli amici\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Visualizzazione solo delle chat con gli amici\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 58\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Caricamento in corso...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 24\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Errore!!!Impossibile visualizzare le chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 65\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: friendChats.map(chat => {\n          let user;\n          {\n            loggedUser._id === chat.utente1 ? user = chat.utente2 : user = chat.utente1;\n          }\n          return /*#__PURE__*/_jsxDEV(ChatButton, {\n            user: user,\n            showChatRoom: showChatRoom,\n            setShowChatRoom: setShowChatRoom,\n            chat: chat,\n            setRightChat: setRightChat,\n            setOtherUser: setOtherUser\n          }, chat._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: showChatRoom && /*#__PURE__*/_jsxDEV(Chat, {\n        rightChat: rightChat,\n        otherUser: otherUser,\n        loggedUser: loggedUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Per ritornare alla \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://localhost:3001/homepage\",\n        children: \" Homepage \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 32\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatsPageFriends, \"gRiIGq7HWEoeVN7tq3ywZsWgksg=\");\n_c = ChatsPageFriends;\nvar _c;\n$RefreshReg$(_c, \"ChatsPageFriends\");","map":{"version":3,"names":["React","useEffect","useState","axios","ChatButton","Chat","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatsPageFriends","_s","loading","setLoading","error","setError","chats","setChats","showChatRoom","setShowChatRoom","otherUser","setOtherUser","rightChat","setRightChat","loggedUser","JSON","parse","localStorage","getItem","get","_id","then","res","status","user","data","friends","updatedLoggedUser","setItem","stringify","Error","catch","e","console","log","length","friendChats","filter","chat","friendID","utente1","utente2","isFriend","some","friend","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","href","_c","$RefreshReg$"],"sources":["C:/Users/ross2/Desktop/Fondamenti-web-app/frontend/src/pages/ChatsPageFriends.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport ChatButton from \"../components/ChatButton\";\r\nimport Chat from \"../components/Chat\";\r\n\r\nexport default function ChatsPageFriends() {\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n    const [chats, setChats] = useState([])\r\n    const [showChatRoom, setShowChatRoom] = useState(false)\r\n    const [otherUser, setOtherUser]=useState(``)\r\n    const [rightChat, setRightChat] = useState({})\r\n    const loggedUser = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n\r\n    useEffect(() => {\r\n        // Ottenere i dati dell'utente loggato\r\n        axios.get(`http://localhost:3000/api/users/${loggedUser._id}`)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              const user = res.data;\r\n              // Ottenere i dati degli amici associati all'utente\r\n              axios.get(`http://localhost:3000/api/users/friends/${loggedUser._id}`)\r\n                .then((res) => {\r\n                  if (res.status === 200) {\r\n                    const friends = res.data;\r\n                    // Aggiornare l'oggetto loggedUser includendo i dati degli amici\r\n                    const updatedLoggedUser = {\r\n                      ...user,\r\n                      friends: friends\r\n                    };\r\n                    localStorage.setItem(\"user\", JSON.stringify(updatedLoggedUser));\r\n                    setLoading(false);\r\n                    setChats(res.data);\r\n                  } else {\r\n                    throw new Error(\"Errore di comunicazione col server nell'ottenimento degli amici\");\r\n                  }\r\n                })\r\n                .catch((e) => {\r\n                  setError(true);\r\n                  setLoading(false);\r\n                  console.log(e);\r\n                });\r\n            } else {\r\n              throw new Error(\"Errore di comunicazione col server nell'ottenimento dei dati utente\");\r\n            }\r\n          })\r\n          .catch((e) => {\r\n            setError(true);\r\n            setLoading(false);\r\n            console.log(e);\r\n          });\r\n      }, []);\r\n      \r\n\r\n    \r\n    console.log(loggedUser)\r\n    console.log(loggedUser.friends.length)\r\n\r\n    //filtro le chat, controllo se l'utente è presente nella lista di amici con some e prendo il suo id\r\n    const friendChats = chats.filter((chat) => {\r\n        const friendID = chat.utente1 === loggedUser._id ? chat.utente2 : chat.utente1\r\n        const isFriend = loggedUser.friends.some(\r\n            (friend) => friend._id == friendID)\r\n        return isFriend\r\n      })\r\n\r\n      console.log(friendChats.length)\r\n      console.log(friendChats)\r\n     \r\n\r\n\r\n    return (<>\r\n        <div>\r\n        {!friendChats.length ? \r\n        ( <p>Non hai ancora chat con gli amici</p> ) : ( <p>Visualizzazione solo delle chat con gli amici</p> )}\r\n\r\n            {loading ? <p>Caricamento in corso...</p> : error ? <p>Errore!!!Impossibile visualizzare le chat</p> : (\r\n                <div className=\"sidebar\">\r\n                    {friendChats.map((chat) => {\r\n                        let user;\r\n                        {\r\n                            loggedUser._id === chat.utente1 ? user = chat.utente2 : user = chat.utente1\r\n                        }\r\n                        return <ChatButton key={chat._id} user={user} showChatRoom={showChatRoom}\r\n                                           setShowChatRoom={setShowChatRoom} chat={chat}\r\n                                           setRightChat={setRightChat}\r\n                                           setOtherUser={setOtherUser}\r\n\r\n                        ></ChatButton>\r\n                    })}\r\n                </div>)}\r\n        </div>\r\n        <div className=\"main-content\">\r\n            {showChatRoom && (<Chat rightChat={rightChat} otherUser={otherUser} loggedUser={loggedUser}></Chat>)}\r\n        </div>\r\n        <p> Per ritornare alla <a href=\"http://localhost:3001/homepage\"> Homepage </a> </p> \r\n\r\n    </>)\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}